"""empty message

Revision ID: ff8762ff8288
Revises: 
Create Date: 2023-01-24 20:13:37.344717

"""
import os
import json
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'ff8762ff8288'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    users = op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id_')
    )
    op.add_column(
        'users',
        sa.Column('role', sa.Enum('teacher', 'student', name='role'), nullable=True))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id_'], unique=False)
    op.create_table('courses',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_courses_id'), 'courses', ['id_'], unique=False)
    op.create_table('profiles',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('fist_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id_'], unique=False)
    op.create_table('sections',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_sections_id'), 'sections', ['id_'], unique=False)
    op.create_table('student_courses',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id_'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_student_courses_id'), 'student_courses', ['id_'], unique=False)
    op.create_table('content_blocks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.add_column(
        'content_blocks',
       sa.Column('type_', sa.Enum('lesson', 'quiz', 'assignment', name='contenttype'), nullable=True))
    op.create_index(op.f('ix_content_blocks_id'), 'content_blocks', ['id_'], unique=False)
    op.create_table('completed_content_blocks',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id_', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('content_block_id', sa.Integer(), nullable=False),
    sa.Column('url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['content_block_id'], ['content_blocks.id_'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_completed_content_blocks_id'), 'completed_content_blocks', ['id_'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_completed_content_blocks_id'), table_name='completed_content_blocks')
    op.drop_table('completed_content_blocks')
    op.drop_index(op.f('ix_content_blocks_id'), table_name='content_blocks')
    op.drop_table('content_blocks')
    op.drop_index(op.f('ix_student_courses_id'), table_name='student_courses')
    op.drop_table('student_courses')
    op.drop_index(op.f('ix_sections_id'), table_name='sections')
    op.drop_table('sections')
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
